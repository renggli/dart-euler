// Problem 45: Triangular, pentagonal, and hexagonal
//
// Triangle, pentagonal, and hexagonal numbers are generated by the following
// formulae:
//
// Triangle      T_n = n * (n + 1) / 2       1, 3, 6, 10, 15, ...
// Pentagonal    P_n = n * (3 * n - 1) / 2   1, 5, 12, 22, 35, ...
// Hexagonal     H_n = n * (2 * n - 1)       1, 6, 15, 28, 45, ...
//
// It can be verified that T285 = P165 = H143 = 40755.
//
// Find the next triangle number that is also pentagonal and hexagonal.
int T(int n) => n * (n + 1) ~/ 2;
int P(int n) => n * (3 * n - 1) ~/ 2;
int H(int n) => n * (2 * n - 1);

int t = 285;
int p = 165;
int h = 143;

void main() {
  for (;;) {
    t++;
    while (P(p) < T(t)) {
      p++;
    }
    while (H(h) < T(t)) {
      h++;
    }
    if (T(t) == P(p) && P(p) == H(h)) {
      assert(T(t) == 1533776805);
      return;
    }
  }
}
